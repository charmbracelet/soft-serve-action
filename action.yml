name: 'Soft-Serve Action'
description: 'A Github Action for Soft-Serve'
branding:
  icon: upload
  color: yellow
inputs:
  server:
    description: 'Soft-Serve address'
    required: true
  ssh-key:
    description: 'SSH key'
    required: false
  ssh-user:
    description: 'SSH user'
    required: true
    default: 'git'
  ssh-port:
    description: 'SSH port'
    required: true
    default: '22'
  name:
    description: 'Name of the repository'
    required: false
  mirror:
    description: 'Mirror repository'
    default: 'false'
    required: true

runs:
  using: "composite"
  steps:
    - id: mirror
      if: ${{ inputs.mirror == 'true' }}
      shell: bash
      run: |
        git clone --mirror $(git config --get remote.origin.url) mirror

    - id: add-ssh-key
      shell: bash
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ inputs.server }} >> ~/.ssh/known_hosts
        eval "$(ssh-agent -a $SSH_AUTH_SOCK)"
        if [ -n "${{ inputs.ssh-key }}" ]; then
          echo "${{ inputs.ssh-key }}" > ~/.ssh/soft_serve_id
          chmod 0600 ~/.ssh/soft_serve_id
          ssh-add ~/.ssh/soft_serve_id
        fi

    - run: echo REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") >> $GITHUB_ENV
      shell: bash

    - id: push
      shell: bash
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        GIT_SSH_COMMAND: ssh -i $HOME/.ssh/soft_serve_id -o IdentitiesOnly=yes
      run: |
        NAME=${{ inputs.name }}
        if [ -z "$NAME" ]; then
          NAME=${{ env.REPOSITORY_NAME }}
        fi
        REMOTE=ssh://${{ inputs.ssh-user }}@${{ inputs.server }}:${{ inputs.ssh-port }}/$NAME
        if [ "${{ inputs.mirror }}" = "true" ]; then
          cd mirror
          git push --mirror $REMOTE
        else
          git remote add soft-serve $REMOTE
          git push --prune --force --all --follow-tags soft-serve
        fi
